version: '3'
services:
  # Define the Next.js application
  web:
    image: nextjs-app  # This is the image of your Next.js app
    build: .
    ports:
      - "${NEXT_PORT}:3000"  # Expose the Next.js app on port 3000
    networks:
      - workmanager-network
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_SALT: ${NEXTAUTH_SALT}
      GOTENBERG_URL: ${GOTENBERG_URL}
      TEMPLATES_GITHUB_REPO: ${TEMPLATES_GITHUB_REPO}
    env_file:
      - .env
    depends_on:
      - db
    command: >
      sh -c "
        npm install ts-node typescript &&
        npx prisma migrate reset -f &&
        npx ts-node -P tsconfig-seed.json prisma/seed.ts &&
        node server.js
      "

  # Define the PostgreSQL database
  db:
    image: postgres:15-alpine  # Use the official PostgreSQL image
    networks:
      - workmanager-network
    volumes:
      - postgres-data:/var/lib/postgresql/data  # Persist PostgreSQL data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}  # Set the default user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Set the default password
      POSTGRES_DB: ${POSTGRES_DB}  # Set the default database name
  
  gotenberg:
    image: gotenberg/gotenberg:8
    networks:
      - workmanager-network

  # Add pgAdmin service
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    networks:
      - workmanager-network
    depends_on:
      - db

# Define volumes to persist database data
volumes:
  postgres-data:

networks:
  workmanager-network:
    driver: bridge
